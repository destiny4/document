(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{372:function(v,_,e){"use strict";e.r(_);var t=e(42),o=Object(t.a)({},(function(){var v=this,_=v.$createElement,e=v._self._c||_;return e("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[e("h1",{attrs:{id:"fbi工作流"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fbi工作流"}},[v._v("#")]),v._v(" fbi工作流")]),v._v(" "),e("blockquote",[e("p",[v._v("前端工程化，项目快速敏捷开发工作流")])]),v._v(" "),e("h2",{attrs:{id:"特性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#特性"}},[v._v("#")]),v._v(" 特性")]),v._v(" "),e("ul",[e("li",[e("p",[v._v("模板管理")]),v._v(" "),e("blockquote",[e("p",[v._v("快速轻松地创建和构建项目。（版本3"),e("code",[v._v(".x")]),v._v("支持基于"),e("code",[v._v("git")]),v._v("的版本控制）")])])]),v._v(" "),e("li",[e("p",[v._v("任务管理")]),v._v(" "),e("blockquote",[e("p",[v._v("轻松管理重复的流程，只需将重复的流程写进"),e("code",[v._v("js")]),v._v("文件里，并添加到"),e("code",[v._v("fbi")]),v._v("全局即可")])])]),v._v(" "),e("li",[e("p",[v._v("依赖管理")]),v._v(" "),e("blockquote",[e("p",[v._v("您可以选择让"),e("code",[v._v("fbi")]),v._v("管理开发依赖项，并在多个项目之间共享，使项目目录更加简洁")])])]),v._v(" "),e("li",[e("p",[v._v("高扩展性")]),v._v(" "),e("blockquote",[e("p",[v._v("创建适合您习惯的"),e("code",[v._v("fbi")]),v._v("全局模板和"),e("code",[v._v("fbi")]),v._v("插件，会使您的工作流程非常简单")])])])]),v._v(" "),e("h2",{attrs:{id:"简单使用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#简单使用"}},[v._v("#")]),v._v(" 简单使用")]),v._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/fbi-js/fbi",target:"_blank",rel:"noopener noreferrer"}},[v._v("地址"),e("OutboundLink")],1)]),v._v(" "),e("h2",{attrs:{id:"核心"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#核心"}},[v._v("#")]),v._v(" 核心")]),v._v(" "),e("h3",{attrs:{id:"目标"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#目标"}},[v._v("#")]),v._v(" 目标")]),v._v(" "),e("p",[e("code",[v._v("fbi")]),v._v("旨在打造一个以可持续扩展，高度可配置，收缩公共依赖和各种标准配置（"),e("code",[v._v("eslint")]),v._v(","),e("code",[v._v("tsconfig")]),v._v(","),e("code",[v._v("webpackConfig")]),v._v("等）为核心的生态工具链。")]),v._v(" "),e("h3",{attrs:{id:"工作流程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#工作流程"}},[v._v("#")]),v._v(" 工作流程")]),v._v(" "),e("p",[e("code",[v._v("fbi")]),v._v("本身并无创建项目的功能，所有的能力基于官方模板进行延伸")]),v._v(" "),e("ul",[e("li",[e("code",[v._v("factory-node")]),v._v("，后台模板，在其下方创建"),e("code",[v._v("node")]),v._v("后端模板，如规范化的"),e("code",[v._v("CURD")]),v._v("接口模板，或者进阶版的包含组内公共业务模块的模板")]),v._v(" "),e("li",[e("code",[v._v("factory-web")]),v._v("，"),e("code",[v._v("web")]),v._v("模板，在其下方创建"),e("code",[v._v("react/vue")]),v._v("前端项目")]),v._v(" "),e("li",[e("code",[v._v("factory-commands")]),v._v(","),e("code",[v._v("fbi")]),v._v("全局命令仓库，"),e("code",[v._v("fbi")]),v._v("的所有指令功能都在这个仓库里面维护，包含但不限于"),e("code",[v._v("commit")]),v._v("，"),e("code",[v._v("lint")]),v._v("，"),e("code",[v._v("run")]),v._v("，"),e("code",[v._v("build")]),v._v("等指令，使用方式就是先"),e("code",[v._v("fbi add factory-commands")]),v._v("，然后就可以"),e("code",[v._v("fbi commit/lint")])])]),v._v(" "),e("h3",{attrs:{id:"收缩配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#收缩配置"}},[v._v("#")]),v._v(" 收缩配置")]),v._v(" "),e("p",[v._v("每个用"),e("code",[v._v("fbi")]),v._v("模板创建的项目的根目录都有一个"),e("code",[v._v(".fbi.config.js")]),v._v("配置文件，通过配置选项来获取额外功能增强（是否启用"),e("code",[v._v("ts")]),v._v("，引入标准化"),e("code",[v._v("eslint")]),v._v("配置，"),e("code",[v._v("vscode")]),v._v("全局配置等），或者自定义打包解析配置（覆盖"),e("code",[v._v("webpack")]),v._v("选项等）。")]),v._v(" "),e("h3",{attrs:{id:"管理公共依赖"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#管理公共依赖"}},[v._v("#")]),v._v(" 管理公共依赖")]),v._v(" "),e("p",[v._v("公共依赖的实现需要遵循"),e("code",[v._v("fbi")]),v._v("模板创建的规范，这个规范由项目组内部定义")]),v._v(" "),e("ul",[e("li",[v._v("可以在项目迭代中抽离公共依赖，发布成"),e("code",[v._v("npm")]),v._v("包，然后在项目模板的依赖中，去引入这个包")]),v._v(" "),e("li",[v._v("或者将公共依赖放在一个内部成员可以访问的域目录，然后以插件的形式去重写"),e("code",[v._v("fbi")]),v._v("的打包命令，将模块路径指向域目录。")])]),v._v(" "),e("p",[v._v("个人推荐第一种方式")]),v._v(" "),e("h3",{attrs:{id:"创建模板"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#创建模板"}},[v._v("#")]),v._v(" 创建模板")]),v._v(" "),e("p",[v._v("模板的创建需要配合"),e("code",[v._v("fbi")]),v._v("的能力，比如项目的依赖，就要引入已经被打包的公共依赖包，还有公共"),e("code",[v._v("eslint")]),v._v("，"),e("code",[v._v("vscode")]),v._v("，"),e("code",[v._v("ts")]),v._v("等项目配置的包，这些依赖和配置包有两种方式引入：")]),v._v(" "),e("ol",[e("li",[v._v("项目模板一定会用到的配置，就直接引入依赖包")]),v._v(" "),e("li",[v._v("项目模板中可选能力，用"),e("code",[v._v("ejs")]),v._v("和"),e("code",[v._v("command line")]),v._v("工具获取用户选项去添加对应依赖")])]),v._v(" "),e("p",[v._v("模板中的可选能力都是通过"),e("code",[v._v("ejs")]),v._v("模板加"),e("code",[v._v("command line")]),v._v("工具获取用户选项实现的")]),v._v(" "),e("h3",{attrs:{id:"待实现"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#待实现"}},[v._v("#")]),v._v(" 待实现")]),v._v(" "),e("p",[v._v("收缩"),e("code",[v._v("CI/CD")]),v._v("配置")]),v._v(" "),e("p",[v._v("更多指令")]),v._v(" "),e("p",[v._v("更多模板")]),v._v(" "),e("p",[v._v("...")])])}),[],!1,null,null,null);_.default=o.exports}}]);